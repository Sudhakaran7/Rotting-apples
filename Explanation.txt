You are given a NxN grid, each cell can have one of three values:
the value 0 representing an empty cell;
the value 1 representing a fresh apple;
the value 2 representing a rotten apple.
Every minute, any fresh apple that is adjacent (4-directionally) to a rotten apple becomes rotten.
Return the minimum number of minutes that must elapse until no cell has a fresh apple.  If this is impossible, return -1 instead.

Input Description:
First line contains N, the size of the grid.(1<N<100)
Second line contains, N values in a single line for the matrix. 

Output Description:
Print the minimum number of minutes that must elapse until no cell has a fresh apple.  If this is impossible, return -1

Sample Input:
3
2 1 1 0 1 1 1 0 1

Sample Output:
-1

Explanation:
The apple in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.

Sample Input:
2
2 0 1 0

Sample Output:
1

Sample Input:
3
0 1 1 2 0 0 1 1 1

Sample Output:
-1

Sample Input:
3
2 1 1 0 1 1 0 0 0

Sample Output:
3

Sample Input:
4
2 1 0 0 0 0 1 1 1 0 1 0 1 1 0 0

Sample output:
-1

Sample Input:
3
1 1 1 0 0 0 1 1 1

Samlpe Output:
-1
